<?php

namespace Demo\App\Catalog\App;

use Demo\App\Catalog\App\Tests\SizeScaleSteps;
use Demo\App\Catalog\Domain\SizeScaleTest;
use Demo\App\Catalog\Domain\UpdateSizeScale;
use Demo\App\Test\KernelTestCase;

final class HandleUpdateSizeScaleTest extends KernelTestCase
{
    private $sizeScaleSteps;

    protected function setUp(): void {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->sizeScaleSteps = SizeScaleSteps::fromContainer(self::$container);
    }

    /** @test */
    public function can_update_size_scale() {
        $this->sizeScaleSteps->given_the_following_size_scales([
            'test' => SizeScaleTest::draftSizeScale('Test', ['1']),
        ]);
        $this->when_the_size_scale_is_updated(new UpdateSizeScale(
            $this->sizeScaleSteps->sizeScaleId('test'),
            'Test 2',
            ['1', '2']
        ));
        $this->sizeScaleSteps->then_the_size_scale_matches($this->sizeScaleSteps->sizeScaleId('test'), [
            SizeScaleTest::matchSizeScaleName('Test 2'),
            SizeScaleTest::matchSizeScaleSizes(['1', '2']),
        ]);
    }

    private function when_the_size_scale_is_updated(UpdateSizeScale $command) {
        self::$container->get(HandleUpdateSizeScale::class)($command);
    }
}
