<?php

namespace Demo\App\Catalog\App;

use Demo\App\Catalog\Domain\Tests\SizeScaleSteps;
use Demo\App\Catalog\Domain\PublishSizeScale;
use Demo\App\Catalog\Domain\SizeScaleStatus;
use Demo\App\Catalog\Domain\SizeScaleTest;
use Demo\App\Test\KernelTestCase;

final class HandlePublishSizeScaleTest extends KernelTestCase
{
    private $sizeScaleSteps;

    protected function setUp(): void {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->sizeScaleSteps = SizeScaleSteps::fromContainer(self::$container);
    }

    /** @test */
    public function can_publish_size_scale() {
        $this->sizeScaleSteps->given_the_following_size_scales([
            'test' => SizeScaleTest::draftSizeScale('Test', ['1']),
        ]);
        $this->when_the_size_scale_is_published(new PublishSizeScale($this->sizeScaleSteps->sizeScaleId('test')));
        $this->sizeScaleSteps->then_the_size_scale_matches($this->sizeScaleSteps->sizeScaleId('test'), [
            SizeScaleTest::matchSizeScaleStatus(SizeScaleStatus::published())
        ]);
    }

    private function when_the_size_scale_is_published(PublishSizeScale $command) {
        self::$container->get(HandlePublishSizeScale::class)($command);
    }
}
